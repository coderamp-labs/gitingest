Usage: gitingest [OPTIONS] [SOURCE]

  Main entry point for the CLI. This function is called when the CLI is run as
  a script.

  It calls the async main function to run the command.

  Parameters ---------- source : str     A directory path or a Git repository
  URL. output : str, optional     The path where the output file will be
  written. If not specified, the output will be written     to a file named
  `<repo_name>.txt` in the current directory. Use '-' to output to stdout.
  max_size : int     Maximum file size (in bytes) to consider. exclude_pattern
  : Tuple[str, ...]     Glob patterns for pruning the file set.
  include_pattern : Tuple[str, ...]     Glob patterns for including files in
  the output. branch : str, optional     Specific branch to ingest (defaults
  to the repository's default). include_gitignored : bool     If provided,
  include files normally ignored by .gitignore. token: str, optional
  GitHub personal-access token (PAT). Needed when *source* refers to a
  **private** repository. Can also be set via the ``GITHUB_TOKEN`` env var.

Options:
  -o, --output TEXT           Output file path (default: <repo_name>.txt in
                              current directory)
  -s, --max-size INTEGER      Maximum file size to process in bytes
  -e, --exclude-pattern TEXT  Patterns to exclude. Handles Python's arbitrary
                              subset of Unix shell-style wildcards. See:
                              https://docs.python.org/3/library/fnmatch.html
  -i, --include-pattern TEXT  Patterns to include. Handles Python's arbitrary
                              subset of Unix shell-style wildcards. See:
                              https://docs.python.org/3/library/fnmatch.html
  -b, --branch TEXT           Branch to clone and ingest
  --include-gitignored        Include files matched by .gitignore
  -t, --token TEXT            GitHub personal access token for accessing
                              private repositories. If omitted, the CLI will
                              look for the GITHUB_TOKEN environment variable.
  --help                      Show this message and exit.
