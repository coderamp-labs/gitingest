<script>
    function getFileName(element) {
        const indentSize = 4;
        let path = "";
        let prevIndentLevel = null;

        while (element) {
            const line = element.textContent;
            const index = line.search(/[a-zA-Z0-9_.-]/);
            const indentLevel = index / indentSize;

            // Stop when we reach or go above the top-level directory
            if (indentLevel <= 1) {
                break;
            }

            // Only include directories that are one level above the previous
            if (prevIndentLevel === null || indentLevel === prevIndentLevel - 1) {
                const fileName = line.substring(index).trim();
                path = fileName + path;
                prevIndentLevel = indentLevel;
            }

            element = element.previousElementSibling;
        }

        return path;
    }

    function toggleFile(element) {
        const patternInput = document.getElementById("pattern");
        const patternFiles = patternInput.value ? patternInput.value.split(",").map(item => item.trim()) : [];

        const directoryContainer = document.getElementById("directory-structure-container");
        const treeLineElements = Array.from(directoryContainer.children).filter(child => child.tagName === "PRE");

        // Skip the first two tree lines (header and repository name)
        if (treeLineElements[0] === element || treeLineElements[1] === element) {
            return;
        }

        element.classList.toggle('line-through');
        element.classList.toggle('text-gray-500');

        const fileName = getFileName(element);
        const fileIndex = patternFiles.indexOf(fileName);

        if (fileIndex !== -1) {
            patternFiles.splice(fileIndex, 1);
        } else {
            patternFiles.push(fileName);
        }

        patternInput.value = patternFiles.join(", ");
    }
</script>
<div class="mt-10" data-results>

</div>
