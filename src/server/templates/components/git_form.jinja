<script>
    document.addEventListener('DOMContentLoaded', function() {
        const checkbox = document.getElementById('use_manual_input');
        const hiddenInput = document.getElementById('file_size_manual');
        const sizeUnitInput = document.getElementById('size_unit_input');

        if (sizeUnitInput.value === 'mb') {
            document.getElementById('size-mb').checked = true;
        } else {
            document.getElementById('size-kb').checked = true;
        }

        if (hiddenInput.value === "true") {
            checkbox.checked = true;
        }

        changeFilesizeInputType(checkbox);
    });

    function changePattern(element) {
        let patternType = element.value;
        const files = document.getElementsByName("tree-line");

        Array.from(files).forEach((element) => {
            if (element.textContent.includes("Directory structure:")) {
                return;
            }
            element.classList.toggle('line-through');
            element.classList.toggle('text-gray-500');
            element.classList.toggle('hover:text-inherit');
            element.classList.toggle('hover:no-underline');
            element.classList.toggle('hover:line-through');
            element.classList.toggle('hover:text-gray-500');
        });
    }

    function changeFilesizeInputType(element) {
        const hiddenInput = document.getElementById('file_size_manual');
        const sliderContainer = document.getElementById('slider_container');
        const manualSizeInput = document.getElementById('manual_size_input_container');
        const manualSizeValueInput = document.getElementById('max_file_size_manual_input');
        const hiddenSizeInput = document.getElementById('max_file_size_manual');
        const sizeUnitInput = document.getElementById('size_unit_input');

        hiddenInput.value = element.checked ? "true" : "false";

        if (element.checked) {
            sliderContainer.style.display = "none";
            manualSizeInput.style.display = "flex";
            const sizeUnit = sizeUnitInput.value;
            const maxValue = sizeUnit === 'kb' ? 100 * 1024 : 100;
            manualSizeValueInput.max = maxValue;
            if (parseInt(manualSizeValueInput.value) > maxValue) {
                manualSizeValueInput.value = maxValue;
            }
            hiddenSizeInput.value = manualSizeValueInput.value || "1024";
        } else {
            manualSizeInput.style.display = "none";
            sliderContainer.style.display = "flex";
            sliderContainer.style.flexDirection = "column";

            const sliderValue = document.getElementById('file_size').value;
            hiddenSizeInput.value = sliderValue;
        }
    }

    function updateManualSizeValue(element) {
        const hiddenSizeInput = document.getElementById('max_file_size_manual');
        hiddenSizeInput.value = element.value || "1024";
    }

    function updateSizeUnit(element) {
        const hiddenSizeUnitInput = document.getElementById('size_unit_input');
        const hiddenSizeInput = document.getElementById('max_file_size_manual');
        const manualSizeValueInput = document.getElementById('max_file_size_manual_input');
        const sizeUnit = element.value;
        const currentValue = parseInt(manualSizeValueInput.value);

        hiddenSizeUnitInput.value = sizeUnit;

        const maxValue = sizeUnit === 'kb' ? 100 * 1024 : 100;
        manualSizeValueInput.max = maxValue;

        if (sizeUnit === 'mb' && currentValue > 100) {
            manualSizeValueInput.value = 100;
            hiddenSizeInput.value = 100;
        }
    }
</script>
<div class="relative">
    <div class="w-full lg:h-[90%] sm:h-full absolute inset-0 bg-gray-900 rounded-xl translate-y-2 translate-x-2"></div>
    <div class="rounded-xl relative z-20 pl-8 sm:pl-10 pr-8 sm:pr-16 py-8 border-[3px] border-gray-900 bg-[#fff4da]">
        <img src="https://cdn.devdojo.com/images/january2023/shape-1.png"
             class="absolute md:block hidden left-0 h-[4.5rem] w-[4.5rem] bottom-0 -translate-x-full ml-3">
        <form class="flex md:flex-row flex-col w-full h-full justify-center items-stretch space-y-5 md:space-y-0 md:space-x-5"
              id="ingestForm"
              onsubmit="handleSubmit(event{% if is_index %}, true{% endif %})">
            <div class="relative w-full h-full">
                <div class="w-full h-full rounded bg-gray-900 translate-y-1 translate-x-1 absolute inset-0 z-10"></div>
                <input type="text"
                       name="input_text"
                       id="input_text"
                       placeholder="https://github.com/..."
                       value="{{ repo_url if repo_url else '' }}"
                       required
                       class="border-[3px] w-full relative z-20 border-gray-900 placeholder-gray-600 text-lg font-medium focus:outline-none py-3.5 px-6 rounded">
            </div>
            <div class="relative w-auto flex-shrink-0 h-full group">
                <div class="w-full h-full rounded bg-gray-800 translate-y-1 translate-x-1 absolute inset-0 z-10"></div>
                <button type="submit"
                        class="py-3.5 rounded px-6 group-hover:-translate-y-px group-hover:-translate-x-px ease-out duration-300 z-20 relative w-full border-[3px] border-gray-900 font-medium bg-[#ffc480] tracking-wide text-lg flex-shrink-0 text-gray-900">
                    Ingest
                </button>
            </div>
            <input type="hidden"
                   id="file_size_manual"
                   name="use_manual_input"
                   value="{{ use_manual_input|default('false') }}">
            <input type="hidden"
                   id="max_file_size_manual"
                   name="max_file_size_manual"
                   value="{{ max_file_size_manual }}">
            <input type="hidden"
                   id="size_unit_input"
                   name="size_unit"
                   value="{{ size_unit|default('kb') }}">
            <input type="hidden" name="pattern_type" value="exclude">
            <input type="hidden" name="pattern" value="">
        </form>
        <div class="mt-4 relative z-20 flex flex-wrap gap-4 items-center">
            <!-- Pattern selector -->
            <div class="w-[200px] sm:w-[250px] mr-9 mt-4">
                <div class="relative">
                    <div class="w-full h-full rounded bg-gray-900 translate-y-1 translate-x-1 absolute inset-0 z-10"></div>
                    <div class="flex relative z-20 border-[3px] border-gray-900 rounded bg-white">
                        <div class="relative flex items-center">
                            <select id="pattern_type"
                                    onchange="changePattern(this)"
                                    name="pattern_type"
                                    class="w-21 py-2 pl-2 pr-6 appearance-none bg-[#e6e8eb] focus:outline-none border-r-[3px] border-gray-900">
                                <option value="exclude"
                                        {% if pattern_type == 'exclude' or not pattern_type %}selected{% endif %}>
                                    Exclude
                                </option>
                                <option value="include" {% if pattern_type == 'include' %}selected{% endif %}>Include</option>
                            </select>
                            <svg class="absolute right-2 w-4 h-4 pointer-events-none"
                                 xmlns="http://www.w3.org/2000/svg"
                                 viewBox="0 0 24 24"
                                 fill="none"
                                 stroke="currentColor"
                                 stroke-width="2"
                                 stroke-linecap="round"
                                 stroke-linejoin="round">
                                <polyline points="6 9 12 15 18 9" />
                            </svg>
                        </div>
                        <input type="text"
                               id="pattern"
                               name="pattern"
                               placeholder="*.md, src/ "
                               value="{{ pattern if pattern else '' }}"
                               class=" py-2 px-2 bg-[#E8F0FE] focus:outline-none w-full">
                    </div>
                </div>
            </div>
            <div class="flex items-center gap-4 h-[40px]">
                <div class="mt-4">
                    <label class="flex flex-col items-center cursor-pointer">
                        <input type="checkbox"
                               id="use_manual_input"
                               name="use_manual_input"
                               class="sr-only peer w-12"
                               onchange="changeFilesizeInputType(this)">
                        <div class="relative w-12 h-6 bg-[#ebdbb7] peer-focus:outline-none peer-focus:ring-2 peer-focus:ring-[#FE4A60]/30 rounded-full peer border-[2px] border-gray-900 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-5 after:transition-all peer-checked:bg-[#FE4A60]">
                        </div>
                        <p class="ms-1 text-xs font-medium text-gray-900">Manual</p>
                    </label>
                </div>
                <div id="slider_container" class="w-[200px] sm:w-[200px] mt-3">
                    <label for="file_size" class="block text-gray-700 mb-1">
                        Include files under: <span id="size_value" class="font-bold">50kb</span>
                    </label>
                    <input type="range"
                           id="file_size"
                           name="max_file_size"
                           min="0"
                           max="500"
                           required
                           value="{{ default_file_size }}"
                           class="w-full h-3 bg-[#FAFAFA] bg-no-repeat bg-[length:50%_100%] bg-[#ebdbb7] appearance-none border-[3px] border-gray-900 rounded-sm focus:outline-none bg-gradient-to-r from-[#FE4A60] to-[#FE4A60] [&::-webkit-slider-thumb]:w-5 [&::-webkit-slider-thumb]:h-7 [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:bg-white [&::-webkit-slider-thumb]:rounded-sm [&::-webkit-slider-thumb]:cursor-pointer [&::-webkit-slider-thumb]:border-solid [&::-webkit-slider-thumb]:border-[3px] [&::-webkit-slider-thumb]:border-gray-900 [&::-webkit-slider-thumb]:shadow-[3px_3px_0_#000]">
                </div>
                <div id="manual_size_input_container" class="mt-3 flex gap-2">
                    <div>
                        <label for="max_file_size_manual_input" class="block text-gray-700 mb-1">Include files under:</label>
                        <input type="number"
                               id="max_file_size_manual_input"
                               name="max_file_size_manual"
                               min="1"
                               max="{{ '102400' if size_unit == 'kb' else '100' }}"
                               value="{{ default_file_size_manual }}"
                               class="lg:w-[150px] sm:w-[100px] border-[3px] border-gray-900 rounded-sm focus:outline-none bg-[#ebdbb7] appearance-none indent-2"
                               style="-webkit-appearance: none;
                                      color: #333"
                               onchange="updateManualSizeValue(this)">
                    </div>
                    <div class="flex flex-col justify-end mb-1">
                        <div class="flex items-center">
                            <input id="size-kb"
                                   type="radio"
                                   value="kb"
                                   name="size_unit"
                                   class="w-4 h-4"
                                   {% if size_unit == 'kb' %}checked{% endif %}
                                   onchange="updateSizeUnit(this)">
                            <label for="size-kb" class="ms-2 text-sm font-medium text-gray-900">KB</label>
                        </div>
                        <div class="flex items-center mt-1">
                            <input id="size-mb"
                                   type="radio"
                                   value="mb"
                                   name="size_unit"
                                   class="w-4 h-4 text-[#FE4A60] bg-[#FE4A60] border-[#FE4A60] focus:ring-[#FE4A60]"
                                   {% if size_unit == 'mb' %}checked{% endif %}
                                   onchange="updateSizeUnit(this)">
                            <label for="size-mb" class="ms-2 text-sm font-medium text-gray-900">MB</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% if show_examples %}
            <!-- Example repositories section -->
            <div class="mt-4">
                <p class="opacity-70 mb-1">Try these example repositories:</p>
                <div class="flex flex-wrap gap-2">
                    {% for example in examples %}
                        <button onclick="submitExample('{{ example.url }}')"
                                class="px-4 py-1 bg-[#EBDBB7] hover:bg-[#FFC480] text-gray-900 rounded transition-colors duration-200 border-[3px] border-gray-900 relative hover:-translate-y-px hover:-translate-x-px">
                            {{ example.name }}
                        </button>
                    {% endfor %}
                </div>
            </div>
        {% endif %}
    </div>
