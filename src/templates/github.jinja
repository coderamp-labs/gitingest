{% extends "base.jinja" %}

{% block content %}
{% if error_message %}
<div class="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg text-red-700" id="error-message"
    data-message="{{ error_message }}">
    {{ error_message }}
</div>
{% endif %}

{% with is_index=true, show_examples=false %}
    {% include 'components/github_form.jinja' %}
{% endwith %}

{% if loading %}
<div class="relative mt-10">
    <div class="w-full h-full absolute inset-0 bg-black rounded-xl translate-y-2 translate-x-2"></div>
    <div class="bg-[#fafafa] rounded-xl border-[3px] border-gray-900 p-6 relative z-20 flex flex-col items-center space-y-4">
        <div class="loader border-8 border-[#fff4da] border-t-8 border-t-[#ffc480] rounded-full w-16 h-16 animate-spin"></div>
        <p class="text-lg font-bold text-gray-900">Loading...</p>
    </div>
</div>
{% endif %}

{% include 'components/result.jinja' %}
{% endblock content %}

{% block extra_scripts %}
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const urlInput = document.getElementById('input_text');
        const form = document.getElementById('ingestForm');
        if (urlInput && urlInput.value.trim() && form) {
            // Wait for stars to be loaded before submitting
            waitForStars().then(() => {
                const submitEvent = new SubmitEvent('submit', { 
                    cancelable: true,
                    bubbles: true
                });
                Object.defineProperty(submitEvent, 'target', {
                    value: form,
                    enumerable: true
                });
                handleSubmit(submitEvent, false);
            });
        }
    });

    function waitForStars() {
        return new Promise((resolve) => {
            const checkStars = () => {
                const stars = document.getElementById('github-stars');
                if (stars && stars.textContent !== '0') {
                    resolve();
                } else {
                    setTimeout(checkStars, 10);
                }
            };
            checkStars();
        });
    }
</script>

<!-- Chatbot UI -->
<div class="chatbot-container">
    <div class="chatbot-header">
        <h2>Chat with our RAG-based Bot</h2>
    </div>
    <div class="chatbot-messages" id="chatbot-messages"></div>
    <div class="chatbot-input">
        <input type="text" id="chatbot-input" placeholder="Type your message here...">
        <button onclick="sendMessage()">Send</button>
    </div>
</div>

<script>
    async function sendMessage() {
        const input = document.getElementById('chatbot-input');
        const messages = document.getElementById('chatbot-messages');
        const userMessage = input.value;
        if (!userMessage) return;

        // Display user message
        const userMessageElement = document.createElement('div');
        userMessageElement.className = 'user-message';
        userMessageElement.textContent = userMessage;
        messages.appendChild(userMessageElement);

        // Clear input
        input.value = '';

        // Send message to chatbot API
        try {
            const response = await fetch('/chatbot/query', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ query: userMessage })
            });
            const data = await response.json();

            // Display chatbot response
            const botMessageElement = document.createElement('div');
            botMessageElement.className = 'bot-message';
            botMessageElement.textContent = data.response;
            messages.appendChild(botMessageElement);
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>

<style>
    .chatbot-container {
        border: 1px solid #ccc;
        border-radius: 5px;
        padding: 10px;
        max-width: 400px;
        margin: 20px auto;
    }

    .chatbot-header {
        text-align: center;
        font-weight: bold;
    }

    .chatbot-messages {
        height: 200px;
        overflow-y: auto;
        border: 1px solid #ccc;
        padding: 10px;
        margin-bottom: 10px;
    }

    .chatbot-input {
        display: flex;
    }

    .chatbot-input input {
        flex: 1;
        padding: 5px;
    }

    .chatbot-input button {
        padding: 5px 10px;
    }

    .user-message {
        text-align: right;
        color: blue;
    }

    .bot-message {
        text-align: left;
        color: green;
    }
</style>
{% endblock extra_scripts %}
